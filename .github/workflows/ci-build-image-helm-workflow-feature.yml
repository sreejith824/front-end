# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on: [push]

# Environment variables available to all jobs and steps in this workflow
env:
  ACR_SERVER_NAME : socksshopacr.azurecr.io
  APP_NAME: socksshop-frontend
  TAG: latest
  HELM_EXPERIMENTAL_OCI: 1
  HELM_VERSION_TO_INSTALL: 3.5.0  
  ACR_SP: http://socksshopacr-push-service-principal
  HELM_CHART: socksshop-frontend-helm
  HELM_CHART_PATH: deployments/socksshop-frontend-helm

# A workflow run is made up of one or more jobs that can run sequentially or in parallel

jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2



      - name: 'Docker login'
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.ACR_SERVER_NAME}}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      # step 3: Build Docker Image
      - name: Build Docker
        run: docker build . -t ${{ env.ACR_SERVER_NAME }}/${{ env.APP_NAME }}:${{ env.TAG }}

      # step 4: Push Docker to Azure Registry
      - name: Push Docker
        run: docker push ${{ env.ACR_SERVER_NAME }}/${{ env.APP_NAME }}:${{ env.TAG }}


      # step 5: install helm
      - name: install helm
        uses: Azure/setup-helm@v1

      # step 6 : login helm registry    
      - name: login to acr using helm
        run: |
          echo ${{ secrets.ACR_HELM_PASSWORD }} | helm registry login ${{ env.ACR_SERVER_NAME }} --username ${{ secrets.ACR_HELM_USERNAME }} --password-stdin

      # step 7 : Save & Push Helm chart to ACR    
      - name: save helm chart to local registry
        run: |
          helm chart save ${{ env.HELM_CHART_PATH }} ${{ env.ACR_SERVER_NAME }}/${{ env.HELM_CHART }}:latest
            
      - name: publish chart to acr
        run: |
          helm chart push ${{ env.ACR_SERVER_NAME }}/${{ env.HELM_CHART }}:latest
